{"pageProps":{"excerpt":" 이번 시간에는 이전 글 에서 만 든 게시글 목록을 클릭하면, 글을 조회하는 기능을 추가해보도록 하겠습니다. 글을 조회하면 보여지는 Template을 만들어 보겠습니다. 아래 내용을 templates 폴더의 detail.html 파일명으로 저장합니다. {% raw %}{% load st","url":"/article/django/2020/08/15/Django-Board-Post-View","frontmatter":{"title":"[Django] 게시판 구현 하기 (2) - 글 조회","date":"2020-08-15 17:22:10","category":"Django"},"content":"\r\n이번 시간에는 [이전 글](https://kyuhyuk.kr/article/python/2020/08/14/Django-Board-Write-Post)에서 만\r\n든 게시글 목록을 클릭하면, 글을 조회하는 기능을 추가해보도록 하겠습니다.\r\n\r\n글을 조회하면 보여지는 Template을 만들어 보겠습니다.  \r\n아래 내용을 `templates` 폴더의 `detail.html` 파일명으로 저장합니다.\r\n\r\n```html\r\n{% raw %}{% load static %}\r\n<!DOCTYPE html>\r\n<html lang=\"ko\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <title>게시판 - {{ board.title }}</title>\r\n    <link rel=\"stylesheet\" href=\"{% static 'bootstrap/css/bootstrap.min.css' %}\" />\r\n  </head>\r\n  <body>\r\n    <header>\r\n      <div class=\"navbar navbar-dark bg-dark shadow-sm mb-3\">\r\n        <div class=\"container d-flex justify-content-between\">\r\n          <a href=\"/\" class=\"navbar-brand d-flex align-items-center\">\r\n            <strong>게시판</strong>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </header>\r\n    <div class=\"container\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\">{{ board.title }} - {{ board.author }}</h5>\r\n          <p class=\"card-text\">\r\n            <small class=\"text-muted\">{{ board.created_date | date:\"Y-m-d h:i\" }}</small>\r\n          </p>\r\n          <p class=\"card-text\">{{ board.content }}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"row mt-3\">\r\n        <div class=\"col-auto mr-auto\"></div>\r\n        <div class=\"col-auto\">\r\n          <a class=\"btn btn-info\" href=\"/post/edit/{{ board.id }}\" role=\"button\">수정</a>\r\n        </div>\r\n        <div class=\"col-auto\">\r\n          <form id=\"delete-form\" action=\"/post/delete/{{ board.id }}\" method=\"post\">\r\n            <input type=\"hidden\" name=\"_method\" value=\"delete\" />\r\n            <button id=\"delete-btn\" type=\"submit\" class=\"btn btn-danger\">삭제</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <script src=\"{% static 'bootstrap/js/bootstrap.min.js' %}\"></script>\r\n  </body>\r\n</html>\r\n{% endraw %}\r\n```\r\n\r\n글 목록에서 글을 클릭하면, 'http://127.0.0.1:8080/post/1'와 같이 `post/{id}`로 이동하는 것을 볼 수있\r\n습니다.  \r\n`board_app` 폴더에 있는 `urls.py`를 아래와 같이 수정합니다.\r\n\r\n```python\r\nfrom django.urls import path\r\nfrom . import views\r\n\r\nurlpatterns = [\r\n    path('', views.index, name='index'),\r\n    path('post', views.post, name='post'),\r\n    path('post/<int:id>', views.detail, name='detail')\r\n]\r\n```\r\n\r\n`urls.py`에 `views.detail`를 추가했으니, `views.py` 파일에 `detail()` 함수를 아래와 같이 추가합니다.\r\n\r\n```python\r\nfrom django.http import HttpResponseRedirect, Http404\r\nfrom django.shortcuts import render\r\nfrom django.urls import reverse\r\n\r\nfrom .models import *\r\n\r\n# Create your views here.\r\ndef index(request):\r\n    boards = {'boards': Board.objects.all()}\r\n    return render(request, 'list.html', boards)\r\n\r\ndef post(request):\r\n    if request.method == \"POST\":\r\n        author = request.POST['author']\r\n        title = request.POST['title']\r\n        content = request.POST['content']\r\n        board = Board(author=author, title=title, content=content)\r\n        board.save()\r\n        return HttpResponseRedirect(reverse('index'))\r\n    else:\r\n        return render(request, 'post.html')\r\n\r\ndef detail(request, id):\r\n    try:\r\n        board = Board.objects.get(pk=id)\r\n    except Board.DoesNotExist:\r\n        raise Http404(\"Does not exist!\")\r\n    return render(request, 'detail.html', {'board': board})\r\n```\r\n\r\n`Board` 모델에 접근하고, `objects`에 접근한 후에 `get()` 함수를 통해 Primary Key가 `id`인 데이터를가\r\n져와 `board` 변수에 저장합니다.  \r\n그리고 `board` 키에 `board` 변수를 할당한 딕셔너리를 `render()` 함수를 통해 전달합니다.\r\n\r\n이렇게 전달한 데이터는 `detail.html`에서 받아 출력하게 되는데, 출력하는 부분은 아래와 같습니다.\r\n\r\n```html\r\n{% raw %}\r\n<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <h5 class=\"card-title\">{{ board.title }} - {{ board.author }}</h5>\r\n    <p class=\"card-text\">\r\n      <small class=\"text-muted\">{{ board.created_date | date:\"Y-m-d h:i\" }}</small>\r\n    </p>\r\n    <p class=\"card-text\">{{ board.content }}</p>\r\n  </div>\r\n</div>\r\n{% endraw %}\r\n```\r\n\r\n`python manage.py runserver 8080`를 실행시켜 아래와 같이 글이 잘 출력되는지 확인합니다.  \r\n![Detail View](/assets/image/2020-08-15-Django-Board-Post-View/2020-08-15-Django-Board-Post-View_1.png)\r\n\r\n**Source Code :**\r\n[github.com/LeeKyuHyuk/Django-Board-Example](https://github.com/LeeKyuHyuk/Django-Board-Example/tree/043ce77511d3f004f24f27c2a101cd85993e7093)\r\n"},"__N_SSG":true}